<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nosql on Backendology</title>
    <link>http://backendology.com/tags/nosql/</link>
    <description>Recent content in Nosql on Backendology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 Aug 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://backendology.com/tags/nosql/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Multiple Layers of Caching</title>
      <link>http://backendology.com/2018/08/27/multiple-layers-caching/</link>
      <pubDate>Mon, 27 Aug 2018 00:00:00 +0000</pubDate>
      
      <guid>http://backendology.com/2018/08/27/multiple-layers-caching/</guid>
      <description>Caching is one of my favorite topics in technology. I&amp;rsquo;ve been fortunate enough to approach this problem from both a hardware and software perspective. This blog post will cover some of the basics of caching, yet focus on the importance of having multiple layers of caching in a system. I think this is a key point worth emphasizing as I&amp;rsquo;ve seen it commonly misunderstood.
A caching anecdote One of the systems I built at Qualtrics could be described as the &amp;ldquo;back of the backend&amp;rdquo; as it was a critical storage system that many services relied on, yet had no service dependencies itself.</description>
    </item>
    
    <item>
      <title>Top 10 Books for New Software Engineers</title>
      <link>http://backendology.com/2018/07/30/top-software-books/</link>
      <pubDate>Mon, 30 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://backendology.com/2018/07/30/top-software-books/</guid>
      <description>I&amp;rsquo;m excited to share my top ten list of books new Software Engineers should invest in reading! These books have proved foundational in helping me transition from student to developer and deepen my skills.
First, a disclaimer: there are some great books missing from this list because I haven&amp;rsquo;t read them yet. I want this list to be as authentic as possible and therefore I will not recommend a book until I&amp;rsquo;ve read it cover to cover.</description>
    </item>
    
    <item>
      <title>Breaking Down Abstractions: Database Indexes</title>
      <link>http://backendology.com/2018/07/23/database-indexes/</link>
      <pubDate>Mon, 23 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://backendology.com/2018/07/23/database-indexes/</guid>
      <description>In the introduction to this blog, I mentioned that I love breaking down abstractions to understand what makes them tick. This blog post is the first of many that will break down a fascinating abstraction.
Abstraction Database indexes provide the abstraction of performant queries with the cost of some overhead during writes and additional storage space. As most workflows are read-heavy, the overhead of indexes is almost always worthwhile.</description>
    </item>
    
    <item>
      <title>What This Blog is All About</title>
      <link>http://backendology.com/2018/07/14/what-this-blog-is-all-about/</link>
      <pubDate>Sat, 14 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>http://backendology.com/2018/07/14/what-this-blog-is-all-about/</guid>
      <description>&amp;ldquo;Backendology&amp;rdquo;?  There are only two hard things in Computer Science: cache invalidation and naming things (Phil Karlton).
 Or, my favorite variant:
 There are only two hard things in Computer Science: cache invalidation, naming things, and off by one errors (Unknown)
 Naming is hard. Backendology isn&amp;rsquo;t a real word. Like the programmer who decides to write a lengthy comment rather than coming up with a better name, I&amp;rsquo;ll try to explain what I intended when I named this blog Backendology.</description>
    </item>
    
  </channel>
</rss>