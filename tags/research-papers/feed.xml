<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Research Papers on Backendology</title>
    <link>https://backendology.com/tags/research-papers/</link>
    <description>Recent content in Research Papers on Backendology</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Sep 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://backendology.com/tags/research-papers/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introduction to Distributed Systems Course</title>
      <link>https://backendology.com/2018/09/19/distributed-systems-course-introduction/</link>
      <pubDate>Wed, 19 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://backendology.com/2018/09/19/distributed-systems-course-introduction/</guid>
      <description>In my previous blog post, I created a detailed reading list of the distributed systems content I deemed most important and interesting. This post is the next step towards designing a comprehensive course in distributed systems: creating an introductory course.
Why not simply start at the top of the reading list and work down? I think any good introduction to this topic should provide a sampling of the various concepts and encourage experimentation and hands on learning.</description>
    </item>
    
    <item>
      <title>Designing a Comprehensive Course in Distributed Systems: Reading List</title>
      <link>https://backendology.com/2018/09/10/distributed-systems-course-reading-list/</link>
      <pubDate>Mon, 10 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://backendology.com/2018/09/10/distributed-systems-course-reading-list/</guid>
      <description>In a recent conversation at work, I learned about MIT&amp;rsquo;s distributed systems course. As the majority of the content is available online through the course website, I was just about ready to dive in, follow the course, and report on what I learned. But then I had this thought: I am not formally a student anymore, so I should take more ownership of my learning. I should design my own comprehensive course in distributed systems!</description>
    </item>
    
  </channel>
</rss>